ggplot2
"ggplot2"
psych
"psych"
install.packages("ggplot2")
q()
install.packages("ggplot2")
install.packages("psych")
install.packages("tree")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("rJava")
installed.packages("dplyr")
install.packages("rJava")
install.packages("sqldf")
install.packages("rforest")
install.packages("e1071")
install.packages("forest")
install.packages("arules")
install.packages("xlsx")
install.packages("readxl")
install.packages("mass")
install.packages("MASS")
install.packages("ISLR")
x = 2
x <- 3
x
x/2
x/1.5
X<-1:5
X<- 1:5
x <- 1:5
x
x <- 100:300
x
x[150]
x[150:155]
x[-(150:155)]
x[-(150:155)]
x[-(150:155)]
x[-(150:155)]
X <-c('a','b'a'c','d')
x
mode (x)
y <-c('a','b','c','d')
x
y
mode (y)
m1<-matrix(data = 1:4, ncol = 2, nrow = 2)
m1
m1<-matrix(data = 1:4, ncol = 2)
m1
m2<-matrix(data = 1:4, ncol = 2, byrow = TRUE)
m2
m3<-matrix(data = 1:4, ncol =3, nrow = 3)
m3<-matrix(data = 1:9, ncol =3, nrow = 3)
m3
x<-1:7
y<-5:7
x+y
Salary <- runof(50,1000,2000)
salary
Salary <- runif(50,1000,2000)
salary
m3<-matrix(data 1:10, ncol = 3)
m3
m3<-matrix(data = 1:10, ncol = 3)
m3
m3 [2,3]
m2 [2,0]
m2 [2]
m3 [2, 1:3]
m3 [c(2,4),c(1,3)]
m3 [-c(1,3),-2]
list(name = "Sachin", wife = "Anjali",
no.child = 2, child.age = c(22,19))
L1=$name
L1$name
l1<-list(name = "Sachin", wife = "Anjali",
no.child = 2, child.age = c(22,19))
L1$name
L1<-list(name = "Sachin", wife = "Anjali",
no.child = 2, child.age = c(22,19))
L1$name
L1$wife
L1[[4]][2]]
L1[[[4]][2]]
L1[[4]]
L1[[4]] [2]
f1 <-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
f1 <-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
f1
f1<-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
f1
F1<-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
F1<-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
F1<-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
F1<-factor(c("outstanding","VeryGood","Good","Average"),
levels =c ("outstanding","VeryGood","Good","Average"),
orderded=FALSE)
f1
F1
F1<-factor(c("O","VG","G","A","A","G","VG","G","o"),
levels =c ("A","G","VG","O"),
orderded=TRUE)
F1
F1<-factor(c("O","VG","G","A","A","G","VG","G","O"),
levels =c ("A","G","VG","O"),
orderded=TRUE)
F1
F1<-factor(c("O","VG","G","A","A","G","VG","G","O"),
levels =c ("A","G","VG","O"),
orderded = TRUE)
F1<-factor(c("O","VG","G","A","A","G","VG","G","O"),
levels =c ("A","G","VG","O"),
ordered = TRUE)
F1
F1[5]
F1[5]
table(F1)
str(F1)
getwd()
head(F1)
data("mtcars")
head(mtcars)
?mtcars
str(mtcars)
mtcars$am
is.factor(mtcars$am)
is.numeric(mtcars$am)
mtcars$as<-as.factor(mtcars$am)
mtcars$am
mtcars[1:5,1:2]
names(mtcars)
mtcars[1:5,c(1,9)]
mtcars[1:5,c("mpg","Cyl")]
a=2
a
a<-4
a
a>-4
a>-2
a>-5
a/2
a<-6
a/1.5
a*2
a+10
a-5
a<- 10:50
a
a[10:50]
x[150:155]
a [10:50]
a [10:15]
x <-100:300
x
y
y[10:15]
y
y<- [10:15]
y <- 10:15
y
y [-(13:14)]
y
y [-(13:14)]
y
y [-(13,14)]
y <- 10:15
y
y [-(12:14)]
y
m < c(a,b,c,d)
m < c('a','b','c','d')
m <- c('a','b','c','d')
m
mode(m)
str(m)
str(a)
h1 <- matrix(data = 10:15, ncol = 2, nrow = 2)
h1
h1 <- matrix(data = 10:15, ncol = 2, TRUE)
h1
h1 <- matrix(data = 10:15, ncol = 2)
h1
installed.packages('SQGDF')
installed.packages('SQLDF')
installed.packages(sqldf)
installed.packages(sqldf)
install..packages(sqldf)
liabrary(sqldf)
libryary(sqldf)
library(sqldf)
MASS::
library(mass)
install.packages(mass)
detach("package:gsubfn", unload=TRUE)
library("ISLR", lib.loc="~/R/win-library/3.5")
detach("package:ISLR", unload=TRUE)
install.packages('mass')
install.packages('MASS')
install.packages("MASS")
install.package('ISLR')
install.packages('ISLR')
library("ISLR", lib.loc="~/R/win-library/3.5")
detach("package:ISLR", unload=TRUE)
islr::Credit
library(islr)
library(ISLR)
islr::Credit
install.packages(ISLR)
detach("package:ISLR", unload=TRUE)
library(ISLR)
islr::Credit
library(sqldf)
library(ISLR)
ISLR::Credit
A=data.frame(credit)
A=data.frame(Credit)
str(A)
sqldf("select *from A")
sqldf("select * from A")
sqldf(" select income, student from A")
sqldf(" select income, student from A" where student ="Yes")
islr::Credit
install.packages('ISLR')
install.packages("ISLR")
islr::Credit
sqldf(" select income, student from A" where student ="Yes")
install.packages('ISLR')
install.packages("ISLR")
liabrary(sqldf)
library(sqldf)
library(mass)
install.packages('mass')
install.packages('MASS')
install.packages("MASS")
install.packages('ISLR')
install.packages("ISLR")
islr::Credit
ISLR::Credit
A=data.frame(Credit)
sqldf("select * from A")
sqldf(" select income, student from A" where student ="Yes")
sqldf(" select income, student from A")
sqldf(" select * from A where sudent = "Yes"")
sqldf(" select * from A where sudent = 'Yes')
sqldf(" select * from A where sudent = 'Yes'")
sqldf("select AVG(Income") from A")
A=data.frame(Credit)
sqldf("select AVG(Income") from A")
sqldf("select AVG(Income) from A")
sqldf("select count() from a")
sqldf("select count() from A")
sqldf("select count() from A GROUP BY enthnicity")
sqldf("select count() from A GROUP BY ethnicity")
sqldf("select max(income) from A Group by ethnicity")
table(A$ethnicity)
sqldf("selecct avg(income) from A")
sqldf("select avg(income) from A")
sqldf("Select count() from Credit where Student='Yes'")
str(A)
fivenum(A$income)
fivenum(A$Income)
table(A$Married,A$ethicity)
table(A$Married, A$ethnicity)
table(A$Married, A$ethnicity)
table(A$Married,A$ethnicity)
A
table(A$Married,A$Ethnicity)
?liabryary
??liabrary
savehistory("G:/1st/history20 April.Rhistory")
